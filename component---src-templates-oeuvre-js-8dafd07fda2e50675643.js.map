{"version":3,"sources":["webpack://marvin/./src/components/footer.js","webpack://marvin/./src/templates/oeuvre.js"],"names":["shouldRotate","text","pageContext","data","bgColor","custom","labelArray","title","split","mainFluid","mainimage","localFile","childImageSharp","fluid","secondFluid","secondimage","details","projectdetails","info","projectinfo","awards","awardsandrecognition","credits","useEffect","window","setTimeout","document","querySelectorAll","forEach","classList","add","className","style","backgroundColor","map","el","index","key","allImageSharp","nodes","img","id"],"mappings":"6HA4BA,IAxBe,WACX,OACI,8BAEI,2BAEI,2BACI,gBAAC,IAAD,CAAcA,cAAc,EAAMC,KAAK,sBACvC,gBAAC,IAAD,CAAcD,cAAc,EAAMC,KAAK,0BAG3C,2BACI,gBAAC,IAAD,CAAcD,cAAc,EAAMC,KAAK,sBACvC,gBAAC,IAAD,CAAcD,cAAc,EAAMC,KAAK,eAG3C,gBAAC,IAAD,CAAcD,cAAc,EAAMC,KAAK,iC,qFCsHvD,UArGuB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAE/BC,EAAUF,EAAYG,OAAOD,QAG7BE,EADQJ,EAAYK,MACDC,MAAM,MAEzBC,EAAYP,EAAYG,OAAOK,UAAUC,UAAUC,gBAAgBC,MACnEC,EAAcZ,EAAYG,OAAOU,YAAYJ,UAAUC,gBAAgBC,MAEvEG,EAAUd,EAAYG,OAAOY,eAC7BC,EAAOhB,EAAYG,OAAOc,YAC1BC,EAASlB,EAAYG,OAAOgB,qBAC5BC,EAAUpB,EAAYG,OAAOiB,QAYnC,OATAC,gBAAU,WAERC,OAAOC,YAAW,WAChBC,SAASC,iBAAiB,iBAAiBC,SAAQ,SAAC3B,GAClDA,EAAK4B,UAAUC,IAAI,iBAEpB,QAIH,uBAAKC,UAAU,kBAEb,uBAAKC,MAAO,CAAEC,gBAAiB7B,GAAW2B,UAAU,eAGpD,uBAAKA,UAAU,UAEb,0BAEIzB,EAAW4B,KAAI,SAACC,EAAIC,GAElB,OAAc,IAAVA,EAGA,uBAAKC,IAAKD,GACR,gBAAC,IAAD,CAAcnC,KAAMkC,EAAInC,cAAc,IACtC,gBAAC,IAAD,CAAc+B,UAAU,QAAQ/B,cAAc,GAAM,gBAAC,IAAD,CAAOa,MAAOJ,MAKxD,IAAV2B,EAEM,gBAAC,IAAD,CAAcL,UAAU,cAAc9B,KAAMkC,EAAInC,cAAc,EAAMqC,IAAKD,IAEzE,gBAAC,IAAD,CAAcnC,KAAMkC,EAAInC,cAAc,EAAMqC,IAAKD,QAOnE,gBAAC,IAAD,CAAcL,UAAU,QAAQ/B,cAAc,GAAM,gBAAC,IAAD,CAAOa,MAAOC,MAIpE,gBAAC,IAAD,CAAOiB,UAAU,aAAalB,MAAOV,EAAKmC,cAAcC,MAAM,GAAG1B,QAEjE,uBAAKkB,UAAU,WAEH,OAATb,EAAgB,0CAAwB,KAC/B,OAATA,EAAgB,yBAAIA,GAAY,KAEpB,OAAZF,EAAmB,6CAA2B,KAClC,OAAZA,EAAmB,yBAAIA,GAAe,KAE3B,OAAXI,EAAkB,oDAAkC,KACzC,OAAXA,EAAkB,yBAAIA,GAAc,KAExB,OAAZE,EAAmB,qCAAmB,KAC1B,OAAZA,EAAmB,yBAAIA,GAAe,MAIzC,uBAAKS,UAAU,WAGX5B,EAAKmC,cAAcC,MAAML,KAAI,SAACM,EAAKJ,GACjC,GAAa,GAATA,EACF,OACE,gBAAC,IAAD,CAAOL,UAAU,eAAelB,MAAO2B,EAAI3B,MAAOwB,IAAKG,EAAIC,SAQrE,gBAAC,IAAD","file":"component---src-templates-oeuvre-js-8dafd07fda2e50675643.js","sourcesContent":["import React from \"react\"\r\nimport AnimatedText from \"./animatedText\"\r\nimport \"../styles/components/footer.scss\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n\r\n            <div>\r\n\r\n                <div>\r\n                    <AnimatedText shouldRotate={true} text=\"MARVIN SCHWAIBOLD\"></AnimatedText>\r\n                    <AnimatedText shouldRotate={true} text=\"LOWER EAST SIDE, NYC\"></AnimatedText>\r\n                </div>\r\n\r\n                <div>\r\n                    <AnimatedText shouldRotate={true} text=\"MARVINSCHWAIBOLD@\"></AnimatedText>\r\n                    <AnimatedText shouldRotate={true} text=\"GMAIL.COM\"></AnimatedText>\r\n                </div>\r\n\r\n                <AnimatedText shouldRotate={true} text=\"ALL RIGHTS RESERVED 2021\"></AnimatedText>\r\n\r\n            </div>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\nimport AnimatedText from \"../components/animatedText\"\r\nimport Footer from \"../components/footer\"\r\n\r\nimport { useEffect } from 'react'\r\nimport { graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\n\r\n\r\nimport \"../styles/oeuvre.scss\"\r\n\r\n\r\n// query les images du content wp\r\nexport const queryImages = graphql`\r\nquery MyQuery($tabNames: [String]) {\r\n  allImageSharp(filter: {fluid: {originalName: {in: $tabNames}}}) {\r\n    nodes {\r\n      fluid {\r\n        originalName\r\n        tracedSVG\r\n        srcWebp\r\n        srcSetWebp\r\n        srcSet\r\n        src\r\n        sizes\r\n        presentationWidth\r\n        presentationHeight\r\n        originalImg\r\n        base64\r\n        aspectRatio\r\n      }\r\n      id\r\n    }\r\n  }\r\n} \r\n  `\r\n\r\nconst OeuvreTemplate = ({ pageContext, data }) => {\r\n\r\n  const bgColor = pageContext.custom.bgColor;\r\n  // le titre vient de wordpress, deux espace signigie un retour à la ligne, on l'éclate selon cette règle en différent span\r\n  const title = pageContext.title;\r\n  const labelArray = title.split(\"  \");\r\n  // stocke le fluid des images\r\n  const mainFluid = pageContext.custom.mainimage.localFile.childImageSharp.fluid;\r\n  const secondFluid = pageContext.custom.secondimage.localFile.childImageSharp.fluid\r\n  // stocke les textes pour l'oeuvre\r\n  const details = pageContext.custom.projectdetails\r\n  const info = pageContext.custom.projectinfo\r\n  const awards = pageContext.custom.awardsandrecognition\r\n  const credits = pageContext.custom.credits\r\n\r\n  // devrait s'éxécuter quand le composant se créé\r\n  useEffect(() => {\r\n    // animes les textes\r\n    window.setTimeout(() => {\r\n      document.querySelectorAll(\".animatedText\").forEach((text) => {\r\n        text.classList.add(\"animated\")\r\n      })\r\n    }, 500)\r\n  })\r\n\r\n  return (\r\n    <div className=\"oeuvreTemplate\">\r\n\r\n      <div style={{ backgroundColor: bgColor }} className=\"background\"></div>\r\n\r\n\r\n      <div className=\"header\">\r\n\r\n        <h1>\r\n          {\r\n            labelArray.map((el, index) => {\r\n              // si c'est le premier titre, \r\n              if (index === 0) {\r\n                return (\r\n                  // affiche une image après\r\n                  <div key={index}>\r\n                    <AnimatedText text={el} shouldRotate={true}></AnimatedText>\r\n                    <AnimatedText className=\"image\" shouldRotate={true}><Image fluid={mainFluid}></Image></AnimatedText>\r\n                  </div>\r\n                )\r\n              } else {\r\n                // si c'est le deuxième titre\r\n                if (index === 1) {\r\n                  // applique une class particulière\r\n                  return (<AnimatedText className=\"titleCenter\" text={el} shouldRotate={true} key={index}></AnimatedText>)\r\n                } else {\r\n                  return (<AnimatedText text={el} shouldRotate={true} key={index}></AnimatedText>)\r\n                }\r\n              }\r\n            })\r\n          }\r\n        </h1>\r\n\r\n        <AnimatedText className=\"image\" shouldRotate={true}><Image fluid={secondFluid}></Image></AnimatedText>\r\n\r\n      </div>\r\n\r\n      <Image className=\"firstImage\" fluid={data.allImageSharp.nodes[0].fluid}></Image>\r\n\r\n      <div className=\"details\">\r\n\r\n        {info !== null ? <h2>PROJECT INFO</h2> : null}\r\n        {info !== null ? <p>{info}</p> : null}\r\n\r\n        {details !== null ? <h2>PROJECT DETAILS</h2> : null}\r\n        {details !== null ? <p>{details}</p> : null}\r\n\r\n        {awards !== null ? <h2>AWARDS AND RECOGNITION</h2> : null}\r\n        {awards !== null ? <p>{awards}</p> : null}\r\n\r\n        {credits !== null ? <h2>CREDITS</h2> : null}\r\n        {credits !== null ? <p>{credits}</p> : null}\r\n\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n\r\n        {\r\n          data.allImageSharp.nodes.map((img, index) => {\r\n            if (index != 0) {\r\n              return (\r\n                <Image className=\"contentImage\" fluid={img.fluid} key={img.id}></Image>\r\n              )\r\n            }\r\n          })\r\n        }\r\n\r\n      </div>\r\n\r\n      <Footer></Footer>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default OeuvreTemplate"],"sourceRoot":""}